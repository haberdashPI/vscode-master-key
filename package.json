{
  "name": "master-key",
  "displayName": "Master Key",
  "publisher": "haberdashPI",
  "description": "Master your keybindings with documentation, discoverability, modal bindings, macros and expressive configuration",
  "version": "0.3.8",
  "icon": "logo.png",
  "repository": {
    "url": "https://github.com/haberdashPi/vscode-master-key"
  },
  "engines": {
    "vscode": "^1.85.0"
  },
  "license": "MIT",
  "categories": [
    "Other",
    "Keymaps"
  ],
  "activationEvents": [
    "*"
  ],
  "browser": "./dist/web/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "master-key.activateBindings",
        "category": "Master Key",
        "title": "Activate Keybindings"
      },
      {
        "command": "master-key.selectUserBindings",
        "category": "Master Key",
        "title": "Activate User Keybindings"
      },
      {
        "command": "master-key.commandSuggestions",
        "category": "Master Key",
        "title": "Key Suggestions..."
      },
      {
        "command": "master-key.commandPalette",
        "category": "Master Key",
        "title": "Simple Command Palette"
      },
      {
        "command": "master-key.showVisualDoc",
        "category": "Master Key",
        "title": "Show Visual Documentation"
      },
      {
        "command": "master-key.installRequiredExtensions",
        "category": "Master Key",
        "title": "Install Extensions Required by Keybindings"
      },
      {
        "command": "master-key.setVisualDocTopModifiers",
        "category": "Master Key",
        "title": "Toggle Visual Doc Modifier for Top of Key"
      },
      {
        "command": "master-key.setVisualDocBottomModifiers",
        "category": "Master Key",
        "title": "Toggle Visual Doc Modifier for Bottom of Key"
      },
      {
        "command": "master-key.toggleVisualDocModifiers",
        "category": "Master Key",
        "title": "Toggle Visual Doc Modifier by frequency"
      },
      {
        "command": "master-key.togglePaletteMode",
        "category": "Master Key",
        "title": "Toggle palette input mode"
      },
      {
        "command": "master-key.deactivateBindings",
        "category": "Master Key",
        "title": "Deactivate Master Keybindings"
      },
      {
        "command": "master-key.installKeybindingExtensions",
        "category": "Master Key",
        "title": "Install Active Keybinding Extensions"
      },
      {
        "command": "master-key.editPreset",
        "category": "Master Key",
        "title": "Edit Preset Copy"
      },
      {
        "command": "master-key.importUserBindings",
        "category": "Master Key",
        "title": "Import User Bindings"
      },
      {
        "command": "master-key.importDefaultBindings",
        "category": "Master Key",
        "title": "Import Default Bindings"
      },
      {
        "command": "master-key.showTextDoc",
        "category": "Master Key",
        "title": "Show Text Documentation"
      }
    ],
    "views": {
      "masterKeyVisualDoc": [
        {
          "type": "webview",
          "id": "masterkey.visualDoc",
          "name": "Master Key Bindings",
          "contextualTitle": "Keys",
          "icon": "icon.svg",
          "visibility": "visible"
        }
      ]
    },
    "viewsContainers": {
      "panel": [
        {
          "id": "masterKeyVisualDoc",
          "title": "Master Key Bindings",
          "icon": "icon.svg"
        }
      ]
    },
    "keybindings": [
      {
        "key": "ctrl+shift+;",
        "command": "master-key.commandSuggestions"
      },
      {
        "key": "ctrl+alt+;",
        "command": "master-key.commandPalette"
      },
      {
        "key": "ctrl+.",
        "when": "master-key.keybindingPaletteOpen",
        "command": "master-key.togglePaletteMode"
      }
    ],
    "configuration": {
      "properties": {
        "master-key.storage": {
          "title": "Internal Storage of Master Key Configuration",
          "type": "object",
          "description": "A set of key-value pairs used to store master key configuration.",
          "default": {}
        },
        "master-key.presetDirectories": {
          "title": "Directory to search for Master Key presets",
          "type": "array",
          "description": "A list of directories where additional Master Key presets can be found.",
          "default": []
        },
        "master-key.defaultLineNumbers": {
          "title": "Default Line Numbering",
          "type": "string",
          "default": "on",
          "enum": [
            "on",
            "off",
            "relative",
            "interval"
          ],
          "description": "The default line numbering setting, when not explicitly specified by a binding mode. This and the mode's line numbering overwrites the global VSCode setting"
        },
        "master-key.maxCommandHistory": {
          "title": "Command History Maximum",
          "type": "integer",
          "description": "The maximum number of previously run commands that are saved.",
          "default": 1024
        },
        "master-key.suggestionDelay": {
          "title": "Suggestion Delay",
          "type": "integer",
          "description": "Time to wait, in milliseconds, before showing command suggestions for multi-key commands (set to 0 to disable)"
        },
        "master-key.keyDisplayDelay": {
          "title": "Key Display Delay",
          "type": "integer",
          "description": "Time to wait, in milliseconds, before clearing status bar display of the most recently pressed key sequence. (set to 0 to hide display entirely)"
        },
        "master-key.searchMatchBackground": {
          "title": "Background of current search match",
          "type": "string",
          "description": "A html format color styling to highlight the current search match(if left blank defaults to built-in search style)."
        },
        "master-key.searchMatchBorder": {
          "title": "Border of current search match",
          "type": "string",
          "description": "A html format color styling for the border of the current search match (if left blank defaults to built-in search style)."
        },
        "master-key.searchOtherMatchesBackground": {
          "title": "Background of non-current search matches",
          "type": "string",
          "description": "A html format color styling to highlight other search matches (if left blank defaults to built-in search style)."
        },
        "master-key.searchOtherMatchesBorder": {
          "title": "Border of non-current search matches",
          "type": "string",
          "description": "A html format color styling for the border of other search matches (if left blank defaults to built-in search style)."
        }
      }
    }
  },
  "scripts": {
    "test": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=dist/web/test/suite/index.js",
    "pretest": "npm run compile-web",
    "posttest": "npm run lint",
    "vscode:prepublish": "npm run package-web",
    "vscode:prepackage": "npm run package-web",
    "precompile-web": "npm run lint",
    "compile-web": "webpack",
    "watch-web": "webpack --watch",
    "package-web": "webpack --mode production --devtool hidden-source-map",
    "lint": "eslint 'test/**/*.mts' 'src/**/*.ts'",
    "run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. .",
    "prewdio:env": "penv wdio",
    "prewdio:package": "webpack --env wdio",
    "prewdio": "run-s prewdio:*",
    "wdio": "wdio run ./wdio.conf.mts > wdio.log; penv base",
    "postwdio": "npm run lint",
    "precoverage:dir": "mkdir -p coverage/raw",
    "precoverage:package": "webpack --env wdio --env coverage",
    "precoverage": "run-s prewdio:env precoverage:*",
    "coverage": "COVERAGE=true COVERAGE_PATH=./coverage/raw wdio run ./wdio.conf.mts",
    "postcoverage:report": "nyc report -t coverage/raw --report-dir coverage/summary --reporter=lcov --reporter=text; penv base",
    "postcoverage": "run-s postcoverage:*",
    "ci": "npm run coverage",
    "clean": "gts clean",
    "fix": "gts fix"
  },
  "devDependencies": {
    "@types/assert": "^1.5.10",
    "@types/lodash": "^4.14.202",
    "@types/mocha": "^10.0.6",
    "@types/node": "20.12.7",
    "@types/object-hash": "^3.0.6",
    "@types/pako": "^2.0.3",
    "@types/text-encoding": "^0.0.39",
    "@types/vscode": "^1.85.0",
    "@types/webpack-env": "^1.18.4",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "@vscode/test-web": "^0.0.22",
    "@wdio/cli": "^8.39.0",
    "@wdio/local-runner": "^8.39.0",
    "@wdio/mocha-framework": "^8.39.0",
    "@wdio/spec-reporter": "^8.39.0",
    "assert": "^2.1.0",
    "coverage-istanbul-loader": "^3.0.5",
    "eslint": "^8.54.0",
    "eslint-plugin-prettier": "^5.1.3",
    "eslint-webpack-plugin": "^4.2.0",
    "gts": "^5.3.1",
    "jsonc-simple-parser": "^3.0.0",
    "mocha": "^10.2.0",
    "npm-run-all": "^4.1.5",
    "nyc": "^17.0.0",
    "penv": "^0.2.0",
    "process": "^0.11.10",
    "ts-loader": "^9.5.1",
    "ts-node": "^10.9.2",
    "typescript": "^5.4.3",
    "wdio-vscode-service": "^6.1.0",
    "webpack": "^5.89.0",
    "webpack-cli": "^5.1.4"
  },
  "dependencies": {
    "@jsep-plugin/regex": "^1.0.3",
    "expect": "^29.7.0",
    "fastestsmallesttextencoderdecoder": "^1.0.22",
    "immutable": "^5.0.0-beta.5",
    "jsep": "^1.3.8",
    "lodash": "^4.17.21",
    "object-hash": "^3.0.0",
    "pako": "^2.1.0",
    "safe-expression": "^1.0.2",
    "semver": "^7.5.4",
    "smol-toml": "^1.1.3",
    "string.prototype.replaceall": "^1.0.8",
    "zod": "^3.22.4",
    "zod-validation-error": "^2.1.0"
  }
}
